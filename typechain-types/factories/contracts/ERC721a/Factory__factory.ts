/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Factory,
  FactoryInterface,
} from "../../../contracts/ERC721a/Factory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "archetype_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "collection",
        type: "address",
      },
    ],
    name: "CollectionAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "archetype",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        components: [
          {
            internalType: "string",
            name: "baseUri",
            type: "string",
          },
          {
            internalType: "address",
            name: "affiliateSigner",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "maxSupply",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "maxBatchSize",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "affiliateFee",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "defaultRoyalty",
            type: "uint16",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "affiliateDiscount",
                type: "uint16",
              },
              {
                components: [
                  {
                    internalType: "uint16",
                    name: "numMints",
                    type: "uint16",
                  },
                  {
                    internalType: "uint16",
                    name: "mintDiscount",
                    type: "uint16",
                  },
                ],
                internalType: "struct MintTier[]",
                name: "mintTiers",
                type: "tuple[]",
              },
            ],
            internalType: "struct Discount",
            name: "discounts",
            type: "tuple",
          },
        ],
        internalType: "struct Config",
        name: "config",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint16",
            name: "ownerBps",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "platformBps",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "partnerBps",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "superAffiliateBps",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "partner",
            type: "address",
          },
          {
            internalType: "address",
            name: "superAffiliate",
            type: "address",
          },
          {
            internalType: "address",
            name: "ownerAltPayout",
            type: "address",
          },
        ],
        internalType: "struct PayoutConfig",
        name: "payoutConfig",
        type: "tuple",
      },
    ],
    name: "createCollection",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "archetype_",
        type: "address",
      },
    ],
    name: "setArchetype",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610ae2380380610ae283398101604081905261002f916100ad565b6100383361005d565b600180546001600160a01b0319166001600160a01b03929092169190911790556100dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100bf57600080fd5b81516001600160a01b03811681146100d657600080fd5b9392505050565b6109f6806100ec6000396000f3fe6080604052600436106100555760003560e01c80630e4b22851461005a5780633eb154be14610096578063715018a6146100b85780638da5cb5b146100cd578063e178b19d146100eb578063f2fde38b146100fe575b600080fd5b34801561006657600080fd5b5060015461007a906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b3480156100a257600080fd5b506100b66100b13660046104f8565b61011e565b005b3480156100c457600080fd5b506100b6610148565b3480156100d957600080fd5b506000546001600160a01b031661007a565b61007a6100f93660046105d5565b61015c565b34801561010a57600080fd5b506100b66101193660046104f8565b610316565b61012661038f565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b61015061038f565b61015a60006103e9565b565b604080514260208201526bffffffffffffffffffffffff193360601b1691810191909152466054820152600090819060740160408051601f1981840301815291905280516020909101206001549091506000906101c2906001600160a01b031683610439565b90506000819050806001600160a01b031663e9e1337b898989898e6040518663ffffffff1660e01b81526004016101fd95949392919061087c565b600060405180830381600087803b15801561021757600080fd5b505af115801561022b573d6000803e3d6000fd5b5050505060003411156102c6576000896001600160a01b03163460405160006040518083038185875af1925050503d8060008114610285576040519150601f19603f3d011682016040523d82523d6000602084013e61028a565b606091505b50509050806102c45760405162461bcd60e51b81526020600482015260016024820152603160f81b60448201526064015b60405180910390fd5b505b604080516001600160a01b0384811682529151918b169133917fac6afecff3051723434121cfeb5eb7618214e75741c93afb13fc8659aafc1715919081900360200190a350979650505050505050565b61031e61038f565b6001600160a01b0381166103835760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102bb565b61038c816103e9565b50565b6000546001600160a01b0316331461015a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102bb565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c176000526e5af43d82803e903d91602b57fd5bf38360781b1760205281603760096000f590506001600160a01b0381166104d65760405162461bcd60e51b815260206004820152601760248201527f455243313136373a2063726561746532206661696c656400000000000000000060448201526064016102bb565b92915050565b80356001600160a01b03811681146104f357600080fd5b919050565b60006020828403121561050a57600080fd5b610513826104dc565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261054157600080fd5b813567ffffffffffffffff8082111561055c5761055c61051a565b604051601f8301601f19908116603f011681019082821181831017156105845761058461051a565b8160405283815286602085880101111561059d57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060e082840312156105cf57600080fd5b50919050565b600080600080600061016086880312156105ee57600080fd5b6105f7866104dc565b9450602086013567ffffffffffffffff8082111561061457600080fd5b61062089838a01610530565b9550604088013591508082111561063657600080fd5b61064289838a01610530565b9450606088013591508082111561065857600080fd5b50610665888289016105bd565b92505061067587608088016105bd565b90509295509295909350565b6000815180845260005b818110156106a75760208185018101518683018201520161068b565b506000602082860101526020601f19601f83011685010191505092915050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b803563ffffffff811681146104f357600080fd5b803561ffff811681146104f357600080fd5b60008235603e1983360301811261072c57600080fd5b90910192915050565b6000604080840161ffff8061074986610704565b168652602080860135601e1987360301811261076457600080fd5b8601818101903567ffffffffffffffff81111561078057600080fd5b8060061b360382131561079257600080fd5b8883018690529384905292600090606089015b818310156107dd57846107b787610704565b168152846107c6858801610704565b1681850152948601946001929092019186016107a5565b9998505050505050505050565b61ffff806107f783610704565b1683528061080760208401610704565b1660208401528061081a60408401610704565b1660408401528061082d60608401610704565b16606084015250610840608082016104dc565b6001600160a01b0381811660808501528061085d60a085016104dc565b1660a08501528061087060c085016104dc565b1660c085015250505050565b600061016080835261089081840189610681565b905082810360208401526108a48188610681565b905082810360408401528535601e198736030181126108c257600080fd5b860160208101903567ffffffffffffffff8111156108df57600080fd5b8036038213156108ee57600080fd5b60e0835261090060e0840182846106c7565b91505061090f602088016104dc565b6001600160a01b03166020830152610929604088016106f0565b63ffffffff166040830152610940606088016106f0565b63ffffffff16606083015261095760808801610704565b61ffff16608083015261096c60a08801610704565b61ffff1660a083015261098260c0880188610716565b82820360c08401526109948282610735565b93505050506109a660608301856107ea565b6001600160a01b038316610140830152969550505050505056fea264697066735822122014d5906fbacaea7ef1b0a46d160e70311a44b6c02b9a29398f8ac81b2b3aa02064736f6c63430008140033";

type FactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Factory__factory extends ContractFactory {
  constructor(...args: FactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    archetype_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(archetype_, overrides || {});
  }
  override deploy(
    archetype_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(archetype_, overrides || {}) as Promise<
      Factory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Factory__factory {
    return super.connect(runner) as Factory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FactoryInterface {
    return new Interface(_abi) as FactoryInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Factory {
    return new Contract(address, _abi, runner) as unknown as Factory;
  }
}
