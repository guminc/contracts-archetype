/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ArchetypePayouts,
  ArchetypePayoutsInterface,
} from "../../contracts/ArchetypePayouts";

const _abi = [
  {
    inputs: [],
    name: "BalanceEmpty",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidLength",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSplitShares",
    type: "error",
  },
  {
    inputs: [],
    name: "NotApprovedToWithdraw",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "approveWithdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "balanceToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "delegate",
        type: "address",
      },
    ],
    name: "isApproved",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "uint16[]",
        name: "splits",
        type: "uint16[]",
      },
    ],
    name: "updateBalances",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "withdrawTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "withdrawTokensFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610dc9806100206000396000f3fe6080604052600436106100855760003560e01c8063a389783e11610059578063a389783e14610134578063b7f64bd514610169578063e3d670d7146101bb578063e81f02b6146101fa578063ff05280e1461021a57600080fd5b80629315b91461008a5780633ccfd60b146100ac5780635ecb16cd146100c15780639a375b07146100e1575b600080fd5b34801561009657600080fd5b506100aa6100a5366004610ab6565b61022d565b005b3480156100b857600080fd5b506100aa6102d2565b3480156100cd57600080fd5b506100aa6100dc366004610b14565b6102e2565b3480156100ed57600080fd5b506100aa6100fc366004610b5f565b3360009081526001602090815260408083206001600160a01b0395909516835293905291909120805460ff1916911515919091179055565b34801561014057600080fd5b5061015461014f366004610b96565b61031d565b60405190151581526020015b60405180910390f35b34801561017557600080fd5b506101ad610184366004610b96565b6001600160a01b0391821660009081526020818152604080832093909416825291909152205490565b604051908152602001610160565b3480156101c757600080fd5b506101ad6101d6366004610bc9565b6001600160a01b031660009081526020818152604080832083805290915290205490565b34801561020657600080fd5b506100aa610215366004610b96565b61034d565b6100aa610228366004610c37565b6103ba565b6001600160a01b038316331480159061026c57506001600160a01b0380841660009081526001602090815260408083209386168352929052205460ff16155b1561028a576040516393256b7d60e01b815260040160405180910390fd5b60005b81518110156102cc576102ba84848484815181106102ad576102ad610cc1565b6020026020010151610825565b806102c481610ced565b91505061028d565b50505050565b336102df81806000610825565b50565b3360005b82518110156103185761030682838584815181106102ad576102ad610cc1565b8061031081610ced565b9150506102e6565b505050565b6001600160a01b0380831660009081526001602090815260408083209385168352929052205460ff165b92915050565b6001600160a01b038216331480159061038c57506001600160a01b0380831660009081526001602090815260408083209385168352929052205460ff16155b156103aa576040516393256b7d60e01b815260040160405180910390fd5b6103b682826000610825565b5050565b8281146103da5760405163251f56a160e21b815260040160405180910390fd5b6000805b8281101561042f578383828181106103f8576103f8610cc1565b905060200201602081019061040d9190610d06565b61041b9061ffff1683610d2a565b91508061042781610ced565b9150506103de565b50806127101461045257604051632429608560e11b815260040160405180910390fd5b6001600160a01b0386166105f2573460005b858110156105eb57600085858381811061048057610480610cc1565b90506020020160208101906104959190610d06565b61ffff1611156105d95760006127108686848181106104b6576104b6610cc1565b90506020020160208101906104cb9190610d06565b6104d99061ffff1685610d3d565b6104e39190610d54565b9050806000808a8a868181106104fb576104fb610cc1565b90506020020160208101906105109190610bc9565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546105629190610d2a565b90915550889050878381811061057a5761057a610cc1565b905060200201602081019061058f9190610bc9565b604080516001600160a01b038c811682526020820185905292909216917f55f368ec5df1aca853572d5a6cbda215a84cf17a93c765932dcfb1c237df2eca910160405180910390a2505b806105e381610ced565b915050610464565b505061081c565b6040516323b872dd60e01b81523360048201523060248201526044810188905286906000906001600160a01b038316906323b872dd906064016020604051808303816000875af115801561064a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066e9190610d76565b90508061068e576040516312171d8360e31b815260040160405180910390fd5b60005b868110156108185760008686838181106106ad576106ad610cc1565b90506020020160208101906106c29190610d06565b61ffff1611156108065760006127108787848181106106e3576106e3610cc1565b90506020020160208101906106f89190610d06565b6107069061ffff168d610d3d565b6107109190610d54565b9050806000808b8b8681811061072857610728610cc1565b905060200201602081019061073d9190610bc9565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160a01b03166001600160a01b03168152602001908152602001600020600082825461078f9190610d2a565b9091555089905088838181106107a7576107a7610cc1565b90506020020160208101906107bc9190610bc9565b604080516001600160a01b038d811682526020820185905292909216917f55f368ec5df1aca853572d5a6cbda215a84cf17a93c765932dcfb1c237df2eca910160405180910390a2505b8061081081610ced565b915050610691565b5050505b50505050505050565b6001600160a01b03838116600090815260208181526040808320938516835292905290812080549082905590819003610871576040516321cd723f60e21b815260040160405180910390fd5b6001600160a01b0382166108fb576000836001600160a01b03168260405160006040518083038185875af1925050503d80600081146108cc576040519150601f19603f3d011682016040523d82523d6000602084013e6108d1565b606091505b505080915050806108f5576040516312171d8360e31b815260040160405180910390fd5b50610996565b60405163a9059cbb60e01b81526001600160a01b03848116600483015260248201839052839160009183169063a9059cbb906044016020604051808303816000875af115801561094f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109739190610d76565b905080610993576040516312171d8360e31b815260040160405180910390fd5b50505b604080516001600160a01b038481168252602082018490528616917f2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b6398910160405180910390a250505050565b80356001600160a01b03811681146109f957600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610a2557600080fd5b8135602067ffffffffffffffff80831115610a4257610a426109fe565b8260051b604051601f19603f83011681018181108482111715610a6757610a676109fe565b604052938452858101830193838101925087851115610a8557600080fd5b83870191505b84821015610aab57610a9c826109e2565b83529183019190830190610a8b565b979650505050505050565b600080600060608486031215610acb57600080fd5b610ad4846109e2565b9250610ae2602085016109e2565b9150604084013567ffffffffffffffff811115610afe57600080fd5b610b0a86828701610a14565b9150509250925092565b600060208284031215610b2657600080fd5b813567ffffffffffffffff811115610b3d57600080fd5b610b4984828501610a14565b949350505050565b80151581146102df57600080fd5b60008060408385031215610b7257600080fd5b610b7b836109e2565b91506020830135610b8b81610b51565b809150509250929050565b60008060408385031215610ba957600080fd5b610bb2836109e2565b9150610bc0602084016109e2565b90509250929050565b600060208284031215610bdb57600080fd5b610be4826109e2565b9392505050565b60008083601f840112610bfd57600080fd5b50813567ffffffffffffffff811115610c1557600080fd5b6020830191508360208260051b8501011115610c3057600080fd5b9250929050565b60008060008060008060808789031215610c5057600080fd5b86359550610c60602088016109e2565b9450604087013567ffffffffffffffff80821115610c7d57600080fd5b610c898a838b01610beb565b90965094506060890135915080821115610ca257600080fd5b50610caf89828a01610beb565b979a9699509497509295939492505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610cff57610cff610cd7565b5060010190565b600060208284031215610d1857600080fd5b813561ffff81168114610be457600080fd5b8082018082111561034757610347610cd7565b808202811582820484141761034757610347610cd7565b600082610d7157634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215610d8857600080fd5b8151610be481610b5156fea2646970667358221220791019111abc5c048e007a95fa30ad98008b233ab576776740d9ca78df332e7e64736f6c63430008140033";

type ArchetypePayoutsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArchetypePayoutsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArchetypePayouts__factory extends ContractFactory {
  constructor(...args: ArchetypePayoutsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ArchetypePayouts & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ArchetypePayouts__factory {
    return super.connect(runner) as ArchetypePayouts__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArchetypePayoutsInterface {
    return new Interface(_abi) as ArchetypePayoutsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ArchetypePayouts {
    return new Contract(address, _abi, runner) as unknown as ArchetypePayouts;
  }
}
